from aiogram import Bot, Dispatcher, F, types
from aiogram.filters.command import Command
import asyncio
import logging
from random import choice
from telegram_bot.configs import TOKEN


bot = Bot(token=TOKEN)
dp = Dispatcher()


# –•–µ–Ω–¥–ª–µ—Ä, —â–æ —Ä–µ–∞–≥—É—î –Ω–∞ –∫–æ–º–∞–Ω–¥—É /info
@dp.message(Command('info'))
async def cmd_info(message: types.Message):
    await message.answer('–ü—Ä–∏–≤—ñ—Ç! –¶–µ —Ç–µ—Å—Ç–æ–≤–∏–π –±–æ—Ç –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –¥–æ–º–∞—à–∫–∏ ‚Ññ39.')


# –•–µ–Ω–¥–ª–µ—Ä, —â–æ —Ä–µ–∞–≥—É—î –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start —Ç–∞ –∫–Ω–æ–ø–∫—É "–†–æ–∑–ø–æ—á–∞—Ç–∏" –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ –±–æ—Ç—É. –ù–∞–¥—Å–∏–ª–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∑ Reply-–∫–Ω–æ–ø–∫–∞–º–∏
@dp.message(Command('start')) 
async def cmd_start(message: types.Message):
    kb = [
        [types.KeyboardButton(text='üî¥ –ß–µ—Ä–≤–æ–Ω–∞ –ø—ñ–≥—É–ª–∫–∞'),
         types.KeyboardButton(text='üîµ –°–∏–Ω—è –ø—ñ–≥—É–ª–∫–∞')]
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    await message.answer('–ù–µ–æ, –æ–±–µ—Ä–∏ —á–µ—Ä–≤–æ–Ω—É –∞–±–æ —Å–∏–Ω—é –ø—ñ–≥—É–ª–∫—É', reply_markup=keyboard)


# –î–≤–∞ —Ö–µ–Ω–¥–ª–µ—Ä–∏, —â–æ —Ä–µ–∞–≥—É—é—Ç—å –Ω–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω—è –∫–Ω–æ–ø–æ–∫ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—ñ–ª—å—Ç—Ä–∞ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å, –±–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è Reply-–∫–Ω–æ–ø–∫–∏ —Å–ø—Ä–∏–π–º–∞—î—Ç—å—Å—è —è–∫ —Ç–µ–∫—Å—Ç–æ–≤–µ –≤–≤–µ–¥–µ–Ω–Ω—è.
@dp.message(F.text == 'üî¥ –ß–µ—Ä–≤–æ–Ω–∞ –ø—ñ–≥—É–ª–∫–∞') 
async def but1(message: types.Message):
    await message.reply('–¢–∏ –¥—ñ–∑–Ω–∞—î—à—Å—è –≤—Å—é –ø—Ä–∞–≤–¥—É –ø—Ä–æ –ú–∞—Ç—Ä–∏—Ü—é!', reply_markup=types.ReplyKeyboardRemove())

@dp.message(F.text == 'üîµ –°–∏–Ω—è –ø—ñ–≥—É–ª–∫–∞')
async def but1(message: types.Message):
    await message.reply('–¢–∏ –ª–∏—à–∏—à—Å—è –≤ –ú–∞—Ç—Ä–∏—Ü—ñ –Ω–∞–∑–∞–≤–∂–¥–∏!', reply_markup=types.ReplyKeyboardRemove())




# –ú—ñ–Ω—ñ-–≥—Ä–∞ "–í–≥–∞–¥–∞–π, –≤ —è–∫—ñ–π —Ä—É—Ü—ñ" –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º Inline-–∫–Ω–æ–ø–æ–∫
@dp.message(Command('play'))
async def cmd_info(message: types.Message):

    answer = ['1', '2']
    data1 = choice(answer)
    answer.remove(data1)
    data2 = answer[0]

    kb = [
        [types.InlineKeyboardButton(text='ü§õüèº –õ—ñ–≤–∞ —Ä—É–∫–∞', callback_data=data1),
         types.InlineKeyboardButton(text='ü§úüèº –ü—Ä–∞–≤–∞ —Ä—É–∫–∞', callback_data=data2)]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    await message.answer('–í–≥–∞–¥–∞–π, –≤ —è–∫—ñ–π —Ä—É—Ü—ñ –º–æ–Ω–µ—Ç–∫–∞?', reply_markup=keyboard)

@dp.callback_query(F.data == '1')
async def game_win(callback: types.CallbackQuery):
    await callback.message.answer('ü•≥ –ü–µ—Ä–µ–º–æ–≥–∞! –í–∏ –∑–Ω–∞–π—à–ª–∏ –º–æ–Ω–µ—Ç–∫—É!')
    await callback.answer()

@dp.callback_query(F.data == '2')
async def game_loose(callback: types.CallbackQuery):
    await callback.message.answer('üòí –ù–µ–≤–¥–∞—á–∞... –ú–æ–Ω–µ—Ç–∫–∞ –≤ —ñ–Ω—à—ñ–π —Ä—É—Ü—ñ...')
    await callback.answer()





async def main():
    logging.basicConfig(level=logging.INFO) # –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è –ø–æ–¥—ñ–π –≤ —Ç–µ—Ä–º—ñ–Ω–∞–ª
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())